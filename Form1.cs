using Memory;
using System;
using System.Diagnostics;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace testepctraba
{
    public partial class Form1 : Form
    {
        Mem memory = new Mem();
        long headReadOffset = 0x78;
        long headWriteOffset = 0x74;
        long aimbotBase = 0;

        public Form1()
        {
            InitializeComponent();
        }

        private async void btnHs_Click(object sender, EventArgs e)
        {
            try
            {
                var proc = Process.GetProcessesByName("HD-Player").FirstOrDefault();
                if (proc == null)
                {
                    MessageBox.Show("HD-Player não encontrado.");
                    return;
                }

                memory.OpenProcess(proc.Id);

                string pattern

                var results = await memory.AoBScan(pattern, true, true);

                if (results.Any())
                {
                    aimbotBase = results.First();
                    MessageBox.Show("Base encontrada: 0x" + aimbotBase.ToString("X"));

                    // Iniciar aimbot loop
                    StartAimbotLoop();
                }
                else
                {
                    MessageBox.Show("Padrão AOB não encontrado.");
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Erro: " + ex.Message);
            }
        }

        private async void StartAimbotLoop()
        {
            await Task.Run(async () =>
            {
                while (true)
                {
                    try
                    {
                        // Leitura da posição da cabeça
                        float headPos = memory.ReadFloat((aimbotBase + headReadOffset).ToString("X"));

                        // Escrita da posição no offset de mira
                        memory.WriteMemory((aimbotBase + headWriteOffset).ToString("X"), "float", headPos.ToString());

                        // Aguarda 10 ms para evitar uso excessivo de CPU
                        await Task.Delay(10);
                    }
                    catch (Exception ex)
                    {
                        Console.WriteLine("Erro no loop AIMBOT: " + ex.Message);
                        break;
                    }
                }
            });
        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }
    }
}
